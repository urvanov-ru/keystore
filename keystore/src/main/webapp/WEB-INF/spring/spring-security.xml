<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:recaptcha.properties"
        ignore-unresolvable="true" />

    <http pattern="/resources/**" security="none" />

    <http pattern="/payu/**" security="none" />
    
    <http pattern="/onpay/**" security="none" />

    <http pattern="/api/**" realm="SecRemoting" create-session="always"
        authentication-manager-ref="apiAuthenticationManager">
        <http-basic />
        <intercept-url pattern="/**" access="ROLE_API" />
    </http>

    <authentication-manager id="apiAuthenticationManager"
        alias="apiAuthenticationManager">
        <authentication-provider
            user-service-ref="clientUserDetailsService">
            <password-encoder ref="bcryptEncoder" />
        </authentication-provider>
    </authentication-manager>


    <http auto-config="false" entry-point-ref="authenticationEntryPoint">
        <intercept-url pattern="/site/resources/**"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/login*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/security/logoutsuccess*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/loginfail*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/register*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/accountactivation*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/captcha*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />

        <intercept-url pattern="/site/jcaptcha.jpg"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/client/clientTypes"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/sendpassword"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/changepassword"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/site/security/repeatActivation*"
            access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/**" access="ROLE_CLIENT,ROLE_SERVICE" />
        

        <!--<form-login login-page="/resources/sencha/index.html?type=login" 
            authentication-failure-url="/resources/sencha/index.html?type=loginfailed" 
            default-target-url="/resources/sencha/index.html?type=home" /> <logout logout-success-url="/security/logoutsuccess" 
            /> -->
        <logout />
        <custom-filter position="FORM_LOGIN_FILTER" ref="jsonAuthenticationFilter" />
        <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER" />
        <custom-filter ref="captchaVerifierFilter" after="FORM_LOGIN_FILTER" />
    </http>

    <!-- May be it should be in child context. servlet-context -->
    <global-method-security pre-post-annotations="enabled"
        secured-annotations="enabled" />

    <beans:bean id="jsonAuthenticationFilter"
        class="ru.urvanov.keystore.filter.JsonAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
    </beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl"
            value="/site/resources/sencha/index.html?type=login" />
    </beans:bean>
    
    
    <beans:bean id="authenticationEntryPoint"
        class="ru.urvanov.keystore.authentication.UnauthorizedAuthenticationEntryPointImpl">
        <beans:property name="loginUrlAuthenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint" />
    </beans:bean>

    <beans:bean name="bcryptEncoder"
        class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <beans:bean id="authenticationProvider"
        class="ru.urvanov.keystore.authentication.DatabaseAuthenticationProvider">
        <beans:property name="userService" ref="userDetailsService" />
        <beans:property name="bcryptEncoder" ref="bcryptEncoder" />
    </beans:bean>
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>

    <!-- For capturing CAPTCHA fields -->
    <beans:bean id="captchaCaptureFilter"
        class="ru.urvanov.keystore.filter.CaptchaCaptureFilter"
        p:useProxy="false" p:proxyPort="" p:proxyHost=""
        p:failureUrl="/site/security/loginfailed?error=captcha"
        p:privateKey="${recaptcha.private.key}" />

    <!-- For verifying CAPTCHA fields -->
    <!-- Private key is assigned by the reCATPCHA service -->
    <beans:bean id="captchaVerifierFilter"
        class="ru.urvanov.keystore.filter.CaptchaVerifierFilter"
        p:useProxy="false" p:proxyPort="" p:proxyHost=""
        p:failureUrl="/site/security/loginfailed?error=captcha"
        p:captchaCaptureFilter-ref="captchaCaptureFilter" p:privateKey="${recaptcha.private.key}" />
</beans:beans>